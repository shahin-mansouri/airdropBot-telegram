"""table name

Revision ID: d292e87677fd
Revises: d3e1d099eafa
Create Date: 2024-12-13 17:12:09.170672

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'd292e87677fd'
down_revision: Union[str, None] = 'd3e1d099eafa'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('django_migrations')
    op.drop_index('telegram_bot_token_token_b1076be9_like', table_name='telegram_bot_token')
    op.drop_index('telegram_bot_token_user_id_e020722a', table_name='telegram_bot_token')
    op.drop_table('telegram_bot_token')
    op.alter_column('telegram_bot_user', 'id',
               existing_type=sa.BIGINT(),
               server_default=None,
               type_=sa.Integer(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('telegram_bot_user', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.drop_index('telegram_bot_user_invite_code_308a5a96_like', table_name='telegram_bot_user')
    op.drop_index('telegram_bot_user_inviter_id_b37c2c58', table_name='telegram_bot_user')
    op.drop_constraint('telegram_bot_user_inviter_id_b37c2c58_fk_telegram_bot_user_id', 'telegram_bot_user', type_='foreignkey')
    op.drop_column('telegram_bot_user', 'inviter_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('telegram_bot_user', sa.Column('inviter_id', sa.BIGINT(), autoincrement=False, nullable=True))
    op.create_foreign_key('telegram_bot_user_inviter_id_b37c2c58_fk_telegram_bot_user_id', 'telegram_bot_user', 'telegram_bot_user', ['inviter_id'], ['id'], initially='DEFERRED', deferrable=True)
    op.create_index('telegram_bot_user_inviter_id_b37c2c58', 'telegram_bot_user', ['inviter_id'], unique=False)
    op.create_index('telegram_bot_user_invite_code_308a5a96_like', 'telegram_bot_user', ['invite_code'], unique=False)
    op.alter_column('telegram_bot_user', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('telegram_bot_user', 'id',
               existing_type=sa.Integer(),
               server_default=sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1),
               type_=sa.BIGINT(),
               existing_nullable=False,
               autoincrement=True)
    op.create_table('telegram_bot_token',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('token', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('expires_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('is_used', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['telegram_bot_user.id'], name='telegram_bot_token_user_id_e020722a_fk_telegram_bot_user_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='telegram_bot_token_pkey'),
    sa.UniqueConstraint('token', name='telegram_bot_token_token_key')
    )
    op.create_index('telegram_bot_token_user_id_e020722a', 'telegram_bot_token', ['user_id'], unique=False)
    op.create_index('telegram_bot_token_token_b1076be9_like', 'telegram_bot_token', ['token'], unique=False)
    op.create_table('django_migrations',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('app', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('applied', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='django_migrations_pkey')
    )
    # ### end Alembic commands ###
